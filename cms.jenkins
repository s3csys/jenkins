pipeline {
    agent any

    // Poll SCM to trigger pipeline automatically for dev deploys
    triggers {
        pollSCM('H/2 * * * *')  // every 2 minutes, adjust as needed
    }

    tools {
        git 'mygit'
    }

    parameters {
        booleanParam(name: 'DEPLOY_DEV', defaultValue: false, description: 'Deploy to Dev environment (auto by SCM)')
        booleanParam(name: 'DEPLOY_STAGING', defaultValue: false, description: 'Deploy to Staging environment (manual/remote)')
        booleanParam(name: 'DEPLOY_PROD', defaultValue: false, description: 'Deploy to Production environment (manual/remote)')
        string(name: 'BRANCH', defaultValue: 'master', description: 'Git branch to build and deploy')
    }

    environment {
        GIT_REPO = 'git@github.com:Fairsoftsolution/CManagement.git'

        DEPLOY_DIR_DEV = 'C:\\websites\\dev-cms.fairsoftservices.com'
        DEPLOY_DIR_STAGING = 'C:\\websites\\staging-cms.fairsoftservices.com'
        DEPLOY_DIR_PROD = 'C:\\websites\\cms.fairsoftservices.com'
    }

    stages {
        stage('Checkout Code') {
            when {
                anyOf {
                    expression { params.DEPLOY_DEV }
                    expression { params.DEPLOY_STAGING }
                    expression { params.DEPLOY_PROD }
                }
            }
            steps {
                echo "Checking out branch ${params.BRANCH} from repo ${env.GIT_REPO}"
                git branch: params.BRANCH, url: env.GIT_REPO, credentialsId: 'your-git-credentials-id'
            }
        }

        stage('Deploy to Dev') {
            when { expression { params.DEPLOY_DEV } }
            steps {
                echo "Deploying to Dev environment..."
                bat """
                @echo off
                setlocal enabledelayedexpansion
                set "DEPLOY_DIR=${env.DEPLOY_DIR_DEV}"
                set "SITE_NAME=dev-cms.fairsoftservices.com"
                set "RELEASES_DIR=%DEPLOY_DIR%\\releases"
                set "SHARED_DIR=%DEPLOY_DIR%\\shared"
                set "WORKSPACE_DIR=%WORKSPACE%\\CManagement"

                :: Timestamp generation using old format
                for /f %%i in ('powershell -NoProfile -Command "Get-Date -Format 'dddd-MMMM-dd-yyyy-HH-mm-tt'"') do set "TIMESTAMP=%%i"
                set "NEW_RELEASE_DIR=%RELEASES_DIR%\\%TIMESTAMP%"

                :: Create directories
                if not exist "%RELEASES_DIR%" mkdir "%RELEASES_DIR%"
                if not exist "%NEW_RELEASE_DIR%" mkdir "%NEW_RELEASE_DIR%"

                :: File copy with detailed logging
                echo [INFO] Copying files from %WORKSPACE_DIR% to %NEW_RELEASE_DIR%
                robocopy "%WORKSPACE_DIR%" "%NEW_RELEASE_DIR%" /MIR /Z /XA:H /W:5 /NFL /NDL /NJH /NJS /nc /ns /np /LOG+:deploy.log
                if %errorlevel% GEQ 8 (
                    echo [ERROR] Robocopy failed with error level %errorlevel%
                    exit /b 1
                )

                :: Clean previous symlink
                if exist "%DEPLOY_DIR%\\current" (
                    echo [INFO] Removing previous symlink
                    rmdir "%DEPLOY_DIR%\\current"
                )

                :: Remove existing Web.config if present
                if exist "%NEW_RELEASE_DIR%\\Web.config" (
                    echo [INFO] Removing existing Web.config
                    del "%NEW_RELEASE_DIR%\\Web.config"
                )

                :: Create new symlinks
                echo [INFO] Creating new symlinks
                mklink /D "%DEPLOY_DIR%\\current" "%NEW_RELEASE_DIR%" || (
                    echo [ERROR] Failed to create current symlink
                    exit /b 1
                )
                mklink "%NEW_RELEASE_DIR%\\Web.config" "%SHARED_DIR%\\Web.config" || (
                    echo [ERROR] Failed to create Web.config symlink
                    exit /b 1
                )

                :: Update IIS site
                echo [INFO] Updating IIS site configuration
                powershell.exe -NoProfile -ExecutionPolicy Bypass -Command ^
                    "Import-Module WebAdministration; ^
                    Set-ItemProperty 'IIS:\\Sites\\%SITE_NAME%' -Name physicalPath -Value '%DEPLOY_DIR%\\current'; ^
                    Stop-WebSite -Name '%SITE_NAME%'; ^
                    Start-WebSite -Name '%SITE_NAME%'"

                :: Clean IIS temp files
                echo [INFO] Cleaning IIS temporary files
                %windir%\\system32\\inetsrv\\appcmd.exe stop site "%SITE_NAME%"
                set "TEMP_DIR=C:\\inetpub\\temp\\IIS Temporary Compressed Files\\%SITE_NAME%"
                if exist "!TEMP_DIR!" (
                    echo [INFO] Deleting temp directory: !TEMP_DIR!
                    rmdir /s /q "!TEMP_DIR!"
                    if %errorlevel% neq 0 (
                        echo [WARNING] Failed to delete temp directory (Error: %errorlevel%)
                    )
                ) else (
                    echo [INFO] Temp directory not found: !TEMP_DIR!
                )
                %windir%\\system32\\inetsrv\\appcmd.exe start site "%SITE_NAME%"

                :: Clean old releases (keep last 5)
                echo [INFO] Cleaning old releases
                pushd "%RELEASES_DIR%"
                set COUNT=0
                for /f "delims=" %%d in ('dir /b /ad /o-d') do (
                    set /a COUNT+=1
                    if !COUNT! GTR 5 (
                        echo [INFO] Deleting old build: %%d
                        rmdir /s /q "%%d" 2>nul
                    )
                )
                popd
                endlocal
                echo [SUCCESS] Deployment completed
                """
            }
        }

        stage('Deploy to Staging') {
            when { expression { params.DEPLOY_STAGING } }
            steps {
                echo "Deploying to Staging environment..."
                bat """
                @echo off
                set "DEPLOY_DIR=${env.DEPLOY_DIR_STAGING}"
                set "SITE_NAME=staging-cms.fairsoftservices.com"
                set "RELEASES_DIR=%DEPLOY_DIR%\\releases"
                set "SHARED_DIR=%DEPLOY_DIR%\\shared"
                set "SOURCE_DIR=${env.DEPLOY_DIR_DEV}\\current"

                :: Timestamp generation using old format
                for /f %%i in ('powershell -NoProfile -Command "Get-Date -Format 'dddd-MMMM-dd-yyyy-HH-mm-tt'"') do set "TIMESTAMP=%%i"
                set "NEW_RELEASE_DIR=%RELEASES_DIR%\\%TIMESTAMP%"

                :: Create directories
                if not exist "%RELEASES_DIR%" mkdir "%RELEASES_DIR%"
                if not exist "%NEW_RELEASE_DIR%" mkdir "%NEW_RELEASE_DIR%"

                :: File copy with detailed logging
                echo [INFO] Copying files from %WORKSPACE_DIR% to %NEW_RELEASE_DIR%
                robocopy "%WORKSPACE_DIR%" "%NEW_RELEASE_DIR%" /MIR /Z /XA:H /W:5 /NFL /NDL /NJH /NJS /nc /ns /np /LOG+:deploy.log
                if %errorlevel% GEQ 8 (
                    echo [ERROR] Robocopy failed with error level %errorlevel%
                    exit /b 1
                )

                :: Clean previous symlink
                if exist "%DEPLOY_DIR%\\current" (
                    echo [INFO] Removing previous symlink
                    rmdir "%DEPLOY_DIR%\\current"
                )

                :: Remove existing Web.config if present
                if exist "%NEW_RELEASE_DIR%\\Web.config" (
                    echo [INFO] Removing existing Web.config
                    del "%NEW_RELEASE_DIR%\\Web.config"
                )

                :: Create new symlinks
                echo [INFO] Creating new symlinks
                mklink /D "%DEPLOY_DIR%\\current" "%NEW_RELEASE_DIR%" || (
                    echo [ERROR] Failed to create current symlink
                    exit /b 1
                )
                mklink "%NEW_RELEASE_DIR%\\Web.config" "%SHARED_DIR%\\Web.config" || (
                    echo [ERROR] Failed to create Web.config symlink
                    exit /b 1
                )

                :: Update IIS site
                echo [INFO] Updating IIS site configuration
                powershell.exe -NoProfile -ExecutionPolicy Bypass -Command ^
                    "Import-Module WebAdministration; ^
                    Set-ItemProperty 'IIS:\\Sites\\%SITE_NAME%' -Name physicalPath -Value '%DEPLOY_DIR%\\current'; ^
                    Stop-WebSite -Name '%SITE_NAME%'; ^
                    Start-WebSite -Name '%SITE_NAME%'"

                :: Clean IIS temp files
                echo [INFO] Cleaning IIS temporary files
                %windir%\\system32\\inetsrv\\appcmd.exe stop site "%SITE_NAME%"
                set "TEMP_DIR=C:\\inetpub\\temp\\IIS Temporary Compressed Files\\%SITE_NAME%"
                if exist "!TEMP_DIR!" (
                    echo [INFO] Deleting temp directory: !TEMP_DIR!
                    rmdir /s /q "!TEMP_DIR!"
                    if %errorlevel% neq 0 (
                        echo [WARNING] Failed to delete temp directory (Error: %errorlevel%)
                    )
                ) else (
                    echo [INFO] Temp directory not found: !TEMP_DIR!
                )
                %windir%\\system32\\inetsrv\\appcmd.exe start site "%SITE_NAME%"

                :: Clean old releases (keep last 5)
                echo [INFO] Cleaning old releases
                pushd "%RELEASES_DIR%"
                set COUNT=0
                for /f "delims=" %%d in ('dir /b /ad /o-d') do (
                    set /a COUNT+=1
                    if !COUNT! GTR 5 (
                        echo [INFO] Deleting old build: %%d
                        rmdir /s /q "%%d" 2>nul
                    )
                )
                popd
                endlocal
                echo [SUCCESS] Deployment completed
                """
            }
        }

        stage('Deploy to Production') {
            when { expression { params.DEPLOY_PROD } }
            steps {
                // input message: 'Approve Production Deployment?', ok: 'Deploy'
                echo "Deploying to Production environment..."
                bat """
                @echo off
                set "DEPLOY_DIR=${env.DEPLOY_DIR_PROD}"
                set "SITE_NAME=cms.fairsoftservices.com"
                set "RELEASES_DIR=%DEPLOY_DIR%\\releases"
                set "SHARED_DIR=%DEPLOY_DIR%\\shared"
                set "SOURCE_DIR=${env.DEPLOY_DIR_STAGING}\\current"

                :: Timestamp generation using old format
                for /f %%i in ('powershell -NoProfile -Command "Get-Date -Format 'dddd-MMMM-dd-yyyy-HH-mm-tt'"') do set "TIMESTAMP=%%i"
                set "NEW_RELEASE_DIR=%RELEASES_DIR%\\%TIMESTAMP%"

                :: Create directories
                if not exist "%RELEASES_DIR%" mkdir "%RELEASES_DIR%"
                if not exist "%NEW_RELEASE_DIR%" mkdir "%NEW_RELEASE_DIR%"

                :: File copy with detailed logging
                echo [INFO] Copying files from %WORKSPACE_DIR% to %NEW_RELEASE_DIR%
                robocopy "%WORKSPACE_DIR%" "%NEW_RELEASE_DIR%" /MIR /Z /XA:H /W:5 /NFL /NDL /NJH /NJS /nc /ns /np /LOG+:deploy.log
                if %errorlevel% GEQ 8 (
                    echo [ERROR] Robocopy failed with error level %errorlevel%
                    exit /b 1
                )

                :: Clean previous symlink
                if exist "%DEPLOY_DIR%\\current" (
                    echo [INFO] Removing previous symlink
                    rmdir "%DEPLOY_DIR%\\current"
                )

                :: Remove existing Web.config if present
                if exist "%NEW_RELEASE_DIR%\\Web.config" (
                    echo [INFO] Removing existing Web.config
                    del "%NEW_RELEASE_DIR%\\Web.config"
                )

                :: Create new symlinks
                echo [INFO] Creating new symlinks
                mklink /D "%DEPLOY_DIR%\\current" "%NEW_RELEASE_DIR%" || (
                    echo [ERROR] Failed to create current symlink
                    exit /b 1
                )
                mklink "%NEW_RELEASE_DIR%\\Web.config" "%SHARED_DIR%\\Web.config" || (
                    echo [ERROR] Failed to create Web.config symlink
                    exit /b 1
                )

                :: Update IIS site
                echo [INFO] Updating IIS site configuration
                powershell.exe -NoProfile -ExecutionPolicy Bypass -Command ^
                    "Import-Module WebAdministration; ^
                    Set-ItemProperty 'IIS:\\Sites\\%SITE_NAME%' -Name physicalPath -Value '%DEPLOY_DIR%\\current'; ^
                    Stop-WebSite -Name '%SITE_NAME%'; ^
                    Start-WebSite -Name '%SITE_NAME%'"

                :: Clean IIS temp files
                echo [INFO] Cleaning IIS temporary files
                %windir%\\system32\\inetsrv\\appcmd.exe stop site "%SITE_NAME%"
                set "TEMP_DIR=C:\\inetpub\\temp\\IIS Temporary Compressed Files\\%SITE_NAME%"
                if exist "!TEMP_DIR!" (
                    echo [INFO] Deleting temp directory: !TEMP_DIR!
                    rmdir /s /q "!TEMP_DIR!"
                    if %errorlevel% neq 0 (
                        echo [WARNING] Failed to delete temp directory (Error: %errorlevel%)
                    )
                ) else (
                    echo [INFO] Temp directory not found: !TEMP_DIR!
                )
                %windir%\\system32\\inetsrv\\appcmd.exe start site "%SITE_NAME%"

                :: Clean old releases (keep last 5)
                echo [INFO] Cleaning old releases
                pushd "%RELEASES_DIR%"
                set COUNT=0
                for /f "delims=" %%d in ('dir /b /ad /o-d') do (
                    set /a COUNT+=1
                    if !COUNT! GTR 5 (
                        echo [INFO] Deleting old build: %%d
                        rmdir /s /q "%%d" 2>nul
                    )
                )
                popd
                endlocal
                echo [SUCCESS] Deployment completed
                """
            }
        }
    }

    post {
        success {
            echo 'Deployment pipeline completed successfully.'
        }
        failure {
            echo 'Deployment pipeline failed. Check logs for details.'
        }
    }
}
